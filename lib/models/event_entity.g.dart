// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'event_entity.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

EventEntity _$EventEntityFromJson(Map<String, dynamic> json) {
  return EventEntity(
    docId: json['docId'] as String,
    type: json['type'] as int,
    searchData: (json['searchData'] as List)?.map((e) => e as String)?.toList(),
    gender: json['gender'] as int,
    tokenID: json['tokenID'] as String,
    visibility: json['visibility'] as int,
    userImage: json['userImage'] as String,
    pushNotificationToken: json['pushNotificationToken'] as String,
    phoneNo: json['phoneNo'] as String,
    isVerified: json['isVerified'] as bool,
    isChurch: json['isChurch'] as bool,
    fullName: json['fullName'] as String,
    databaseName: json['databaseName'] as String,
    churchName: json['churchName'] as String,
    timeUpdated: json['timeUpdated'] as int,
    documentId: json['documentId'] as String,
    uid: json['uid'] as String,
    isAdmin: json['isAdmin'] as bool,
    username: json['username'] as String,
    ownerId: json['ownerId'] as String,
    image: json['image'] as String,
    email: json['email'] as String,
    time: json['time'] as int,
    updateAt: timestampFromJson(json['updateAt'] as Timestamp),
    isReported: json['isReported'] as bool,
    isHidden: json['isHidden'] as bool,
    createAt: timestampFromJson(json['createAt'] as Timestamp),
    eventData: (json['eventData'] as List)
        ?.map((e) =>
            e == null ? null : EventData.fromJson(e as Map<String, dynamic>))
        ?.toList(),
    eventDetails: json['eventDetails'] as String,
    eventEndDate: json['eventEndDate'] as int,
    eventEndTime: json['eventEndTime'] as int,
    eventIndex: json['eventIndex'] as int,
    eventLatitude: (json['eventLatitude'] as num)?.toDouble(),
    eventLongitude: (json['eventLongitude'] as num)?.toDouble(),
    eventPrice: json['eventPrice'] as int,
    eventStartDate: json['eventStartDate'] as int,
    eventStartTime: json['eventStartTime'] as int,
    eventTitle: json['eventTitle'] as String,
    eventWebAddress: json['eventWebAddress'] as String,
    isSponsored: json['isSponsored'] as bool,
    location: json['location'] as String,
    reason: json['reason'] as String,
    sponsorFee: json['sponsorFee'] as int,
    status: json['status'] as int,
  );
}

Map<String, dynamic> _$EventEntityToJson(EventEntity instance) =>
    <String, dynamic>{
      'documentId': instance.documentId,
      'isAdmin': instance.isAdmin,
      'churchName': instance.churchName,
      'databaseName': instance.databaseName,
      'docId': instance.docId,
      'email': instance.email,
      'eventData': instance.eventData?.map((e) => e?.toJson())?.toList(),
      'eventDetails': instance.eventDetails,
      'eventEndDate': instance.eventEndDate,
      'eventEndTime': instance.eventEndTime,
      'eventIndex': instance.eventIndex,
      'eventLatitude': instance.eventLatitude,
      'eventLongitude': instance.eventLongitude,
      'eventPrice': instance.eventPrice,
      'eventStartDate': instance.eventStartDate,
      'eventStartTime': instance.eventStartTime,
      'eventTitle': instance.eventTitle,
      'eventWebAddress': instance.eventWebAddress,
      'fullName': instance.fullName,
      'gender': instance.gender,
      'image': instance.image,
      'isChurch': instance.isChurch,
      'isHidden': instance.isHidden,
      'isReported': instance.isReported,
      'isSponsored': instance.isSponsored,
      'isVerified': instance.isVerified,
      'location': instance.location,
      'ownerId': instance.ownerId,
      'phoneNo': instance.phoneNo,
      'pushNotificationToken': instance.pushNotificationToken,
      'reason': instance.reason,
      'searchData': instance.searchData,
      'sponsorFee': instance.sponsorFee,
      'time': instance.time,
      'status': instance.status,
      'timeUpdated': instance.timeUpdated,
      'tokenID': instance.tokenID,
      'type': instance.type,
      'uid': instance.uid,
      'userImage': instance.userImage,
      'username': instance.username,
      'visibility': instance.visibility,
      'createAt': timestampToJson(instance.createAt),
      'updateAt': timestampToJson(instance.updateAt),
    };
